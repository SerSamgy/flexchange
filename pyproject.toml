[tool.poetry]
name = "flexchange"
version = "0.1.0"
description = "Test assignment for FlexPower company"
authors = ["SerSamgy <samgy7cool@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
aiosqlite = "^0.18.0"
fastapi = "^0.89.1"
httptools = "^0.5.0"
jinja2 = "^3.1.2"
passlib = {version = "^1.7.4", extras = ["bcrypt"]}
pydantic = {version = "^1.10.4", extras = ["dotenv"]}
python-jose = {version = "^3.3.0", extras = ["cryptography"]}
python-multipart = "^0.0.6"
SQLAlchemy = {version = "^2.0.0", extras = ["asyncio"]}
ujson = "^5.7.0"
uvicorn = { version = "^0.20.0", extras = ["standard"] }
yarl = "^1.8.2"

[tool.poetry.dev-dependencies]
anyio = "^3.6.2"
black = "^22.12.0"
httpx = "^0.23.3"
parsel = "^1.8.1"
pre-commit = "^3.0.1"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-env = "^0.8.1"
ruff = "^0.0.263"
wemake-python-styleguide = "^0.17.0"

[tool.ruff]
line-length = 110
target-version = "py311"

[tool.black]
line-length = 110
target-version = ['py311']

[tool.pyright]
include = ["flexchange"]
exclude = [
    "**/test_*.py",
    "**/__pycache__",
]
reportMissingImports = true
reportUnusedImports = "warning"
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
useLibraryCodeForTypes = true
pythonVersion = "3.11"
pythonPlatform = "Linux"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "FLEXCHANGE_ENVIRONMENT=pytest",
    "FLEXCHANGE_DB_FILE=test_db.sqlite3",
]

[fastapi-template.options]
project_name = "flexchange"
api_type = "rest"
enable_redis = "None"
enable_rmq = "None"
ci_type = "none"
enable_migrations = "None"
enable_taskiq = "None"
enable_kube = "None"
kube_name = "flexchange"
enable_routers = "True"
enable_kafka = "None"
enable_loguru = "None"
traefik_labels = "None"
add_dummy = "True"
orm = "sqlalchemy"
self_hosted_swagger = "None"
prometheus_enabled = "None"
sentry_enabled = "None"
otlp_enabled = "None"

[tool.coverage.run]
relative_files = true
omit = [
    "*test_*",
    "*__init__*",
    "*__main__*",
    "*conftest*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
skip_covered = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
